# 실행 조건 : 모든 이미지가 있어야 함 (로컬이 or 도커 허브 - 나중에 허브에 업로드)
version: '3.7'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5671:5671"
      - "5672:5672" # rabbitmq amqp port
      - "4369:4369"
      - "15671:15671"
      - "15672:15672" # ui manage port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    networks:
      my-network:

  zookeeper:
    image: wurstmeister/zookeeper
    # image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      my-network:
        ipv4_address: 172.18.0.100

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    # image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.18.0.101

  config-server:
    container_name: config-server
    image: completed0728/config-server:1.0
    ports:
      - "8888:8888"
    environment:
      spring.rabbitmq.host: rabbitmq
#      spring.profiles.active: default
    depends_on:
      - rabbitmq
      - mysql
    volumes:
      - D:\msa\keystore\client.jks:/client.jks
    networks:
      my-network:

  naming-server:
    container_name: naming-server
    image: completed0728/naming-server:1.0
    ports:
      - "8761:8761"
    environment:
      spring.config.import: optional:configserver:http://config-server:8888
    depends_on:
      - config-server
    networks:
      my-network:

  gateway-service:
    container_name: gateway-service
    image: completed0728/gateway-service:1.0
    ports:
      - "8000:8000"
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
    depends_on:
      - naming-server
    networks:
      my-network:

  mysql:
    image: mysql:8.0.26
    restart: always
    command:
      - --lower_case_table_names=1
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=msa
      - MYSQL_ROOT_PASSWORD=root1234!!
      - TZ=Asia/Seoul
    volumes:
      - D:\MYSQL:/var/lib/mysql
    networks:
      my-network:

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      my-network:



  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - D:\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      my-network:

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - D:\grafana\data:/var/lib/grafana
    networks:
      my-network:

  user-service:
    container_name: user-service
    image: completed0728/user-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      # spring.profiles.active: prod  -> test production profiles msa_prod config-server, prod_database
      logging.file: /api-logs/users-ws.log
    depends_on:
      - gateway-service # gateway-service에서 위 세 항목을 모두 달고 있으니까..
    networks:
      my-network:
    restart: on-failure

  order-service:
    container_name: order-service
    image: completed0728/order-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/msa?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      logging.file: /api-logs/order-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  catalog-service:
    container_name: catalog-service
    image: completed0728/catalog-service:1.0
    environment:
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/msa?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      logging.file: /api-logs/catalog-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:
networks:
  my-network:
    external: true
    name: suhan-network